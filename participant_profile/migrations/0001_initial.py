# Generated by Django 3.2.5 on 2021-07-07 06:23

from django.db import migrations, models
import django.utils.timezone
import participant_profile.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FatherStudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(db_index=True, default=False, verbose_name='Verifikasi')),
                ('full_name', models.CharField(db_index=True, max_length=120, verbose_name='Nama Lengkap')),
                ('city_born', models.CharField(help_text='Contoh pengisian tempat lahir: Kab bandung', max_length=120, verbose_name='Kota/Kabupaten Kelahiran')),
                ('date_born', models.DateField(null=True, verbose_name='Tanggal Lahir')),
                ('nik', models.PositiveIntegerField(help_text='Diisi berdasarkan Kartu Keluarga', null=True, verbose_name='Nomor Induk Kependudukan (NIK)')),
                ('education', models.CharField(choices=[('SD', 'SD'), ('SLTP', 'SLTP'), ('SLTA', 'SLTA'), ('D2', 'D2'), ('D3', 'D3'), ('D4', 'D4'), ('S1', 'S1'), ('S2', 'S2'), ('S3', 'S3')], max_length=4, verbose_name='Pendidikan Terakhir')),
                ('job', models.CharField(blank=True, max_length=100, null=True, verbose_name='Pekerjaan')),
                ('salary', models.PositiveIntegerField(blank=True, help_text='Diisi dengan angka', null=True, verbose_name='Penghasilan')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(max_length=15, null=True, verbose_name='No. HP')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MajorStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(db_index=True, default=False)),
                ('first_major', models.CharField(choices=[('TKJ', 'Teknik Komputer dan Jaringan'), ('TJAT', 'Teknik Jaringan Akses dan Telekomunikasi'), ('MM', 'Multimedia')], max_length=4, verbose_name='Pilihan Jurusan Pertama')),
                ('second_major', models.CharField(choices=[('TKJ', 'Teknik Komputer dan Jaringan'), ('TJAT', 'Teknik Jaringan Akses dan Telekomunikasi'), ('MM', 'Multimedia')], max_length=4, verbose_name='Pilihan Jurusan Kedua')),
                ('info', models.CharField(choices=[('WEB', 'Website'), ('FB', 'Facebook'), ('IG', 'Instagram'), ('SDR', 'Sodara'), ('TMB', 'Teman Ibu'), ('TMA', 'Teman Ayah'), ('TMN', 'Teman Anak'), ('KAN', 'Kakak Alumni Anak'), ('LLY', 'Lainnya')], max_length=3, verbose_name='Info Primaseru (PPDB)')),
            ],
        ),
        migrations.CreateModel(
            name='MotherStudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(db_index=True, default=False, verbose_name='Verifikasi')),
                ('full_name', models.CharField(db_index=True, max_length=120, verbose_name='Nama Lengkap')),
                ('city_born', models.CharField(help_text='Contoh pengisian tempat lahir: Kab bandung', max_length=120, verbose_name='Kota/Kabupaten Kelahiran')),
                ('date_born', models.DateField(null=True, verbose_name='Tanggal Lahir')),
                ('nik', models.PositiveIntegerField(help_text='Diisi berdasarkan Kartu Keluarga', null=True, verbose_name='Nomor Induk Kependudukan (NIK)')),
                ('education', models.CharField(choices=[('SD', 'SD'), ('SLTP', 'SLTP'), ('SLTA', 'SLTA'), ('D2', 'D2'), ('D3', 'D3'), ('D4', 'D4'), ('S1', 'S1'), ('S2', 'S2'), ('S3', 'S3')], max_length=4, verbose_name='Pendidikan Terakhir')),
                ('job', models.CharField(blank=True, max_length=100, null=True, verbose_name='Pekerjaan')),
                ('salary', models.PositiveIntegerField(blank=True, help_text='Diisi dengan angka', null=True, verbose_name='Penghasilan')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(max_length=15, null=True, verbose_name='No. HP')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParticipantProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(db_index=True, default=False, verbose_name='Verifikasi')),
                ('sex', models.CharField(choices=[('P', 'Perempuan'), ('L', 'Laki - Laki')], max_length=1, verbose_name='Jenis Kelamin')),
                ('religion', models.CharField(choices=[('ISL', 'Islam'), ('PRS', 'Protestan'), ('KTH', 'Katolik'), ('HDN', 'Hindu'), ('BDH', 'Budha'), ('KHC', 'Konghucu')], max_length=3, verbose_name='Agama')),
                ('city_born', models.CharField(help_text='Contoh: Kabupaten Bandung', max_length=100, verbose_name='Kota Tempat Lahir')),
                ('date_born', models.DateField(verbose_name='Tanggal Lahir')),
                ('social_media', models.CharField(help_text='Seperti Instagram atau FB', max_length=50, verbose_name='Alamat Sosial Media')),
                ('achievement', models.TextField(blank=True, help_text='Contoh: Juara 1 Lomba Basket Tingkat Nasional', null=True, verbose_name='Penghargaan')),
                ('nisn', models.IntegerField(help_text='Isi NISN berdasarkan NISN yang diberikan sewaktu SMP.', unique=True, verbose_name='NISN')),
                ('nik', models.IntegerField(help_text='Bisa dicek di Kartu Keluarga', unique=True, verbose_name='Nomor Induk Kependudukan (NIK)')),
                ('kk_number', models.PositiveIntegerField(help_text='Diisi berdasarkan Kartu Keluarga', verbose_name='Nomor Kartu Keluarga (KK)')),
                ('kk_address', models.TextField(help_text='Contoh: Jalan Radio Palasari', verbose_name='Alamat Kartu Keluarga (KK)')),
                ('city', models.CharField(help_text='Contoh: Kota Bandung', max_length=120, verbose_name='Kota')),
                ('kecamatan', models.CharField(help_text='Contoh: Kecamatan Dayeuhkolot', max_length=120, verbose_name='Kecamatan')),
                ('kelurahan', models.CharField(help_text='Contoh: Desa Cieteureup', max_length=120, verbose_name='Kelurahan')),
                ('dusun', models.CharField(help_text='Jika tidak tahu diisi dengan -', max_length=120, verbose_name='Dusun')),
                ('rt_rw', models.CharField(help_text='Contoh: 006/002', max_length=8, verbose_name='RT/RW')),
                ('real_address', models.TextField(help_text='Contoh: Jalan Bojongsoang', verbose_name='Alamat Sekarang')),
                ('resident', models.CharField(help_text='Contoh: Rumah Pribadi, Kost, Rumah Keluarga (Keluarga Besar)', max_length=50, verbose_name='Tempat Tinggal')),
                ('transport', models.CharField(help_text='Contoh: Jalan Kaki, Motor, Ojek Online, Sepeda, Mobil, Angkot.', max_length=50, verbose_name='Alat Transportasi')),
                ('school_origin', models.CharField(help_text='Isilah sesuai dengan asal sekolah Anda dan dituliskan seperti contoh berikut : SMP     Telkom Bandung ', max_length=120, verbose_name='Asal Sekolah')),
                ('npsn_school_origin', models.PositiveIntegerField(help_text="Bisa Cek <a href='https://referensi.data.kemdikbud.go.id/index11.php' ta    rget='_blank'><b>Disini</b></a>", null=True, verbose_name='Nomor NPSN Sekolah Asal')),
                ('medic_record', models.TextField(blank=True, help_text='Jika pernah mempunyai penyakit, silahkan ditulis disini', null=True, verbose_name='Riwayat Kesehatan')),
                ('blood_type', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('AB', 'AB'), ('O', 'O'), ('0', 'Tidak Tahu')], max_length=2, verbose_name='Golongan Darah')),
                ('in_medicine', models.CharField(blank=True, max_length=120, null=True, verbose_name='Dalam Pengobatan')),
                ('private_doctor', models.CharField(blank=True, help_text='Jika kamu mempunyai dokter keluarga, silahkan input     disini', max_length=120, null=True, verbose_name='Nama Dokter Keluarga')),
                ('phone_doctor', models.CharField(blank=True, help_text='Isi jika memiliki dokter keluarga dan atau dalam masa pen    yambuhan penyakit', max_length=15, null=True, verbose_name='No Telepon Dokter')),
            ],
        ),
        migrations.CreateModel(
            name='PhotoProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='default_photo.png', upload_to='profile_pics', verbose_name='Photo')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(db_index=True, default=False)),
                ('msg', models.CharField(blank=True, max_length=120, null=True, verbose_name='Pesan')),
                ('ra_sem_1', models.FileField(blank=True, null=True, upload_to=participant_profile.models.user_directory_path, verbose_name='Rapor Semester 1')),
                ('ra_sem_2', models.FileField(blank=True, null=True, upload_to=participant_profile.models.user_directory_path, verbose_name='Rapor Semester 2')),
                ('ra_sem_3', models.FileField(blank=True, null=True, upload_to=participant_profile.models.user_directory_path, verbose_name='Rapor Semester 3')),
                ('ra_sem_4', models.FileField(blank=True, null=True, upload_to=participant_profile.models.user_directory_path, verbose_name='Rapor Semester 4')),
                ('ra_sem_5', models.FileField(blank=True, null=True, upload_to=participant_profile.models.user_directory_path, verbose_name='Rapor Semester 5')),
                ('color_blind_cert', models.FileField(blank=True, null=True, upload_to=participant_profile.models.user_directory_path, verbose_name='Semester Keterangan Tidak Buta Warna')),
                ('healty_cert', models.FileField(blank=True, null=True, upload_to=participant_profile.models.user_directory_path, verbose_name='Surat Keterangan Sehat')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='StudentGuardianProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(db_index=True, default=False, verbose_name='Verifikasi')),
                ('full_name', models.CharField(db_index=True, max_length=120, verbose_name='Nama Lengkap')),
                ('city_born', models.CharField(help_text='Contoh pengisian tempat lahir: Kab bandung', max_length=120, verbose_name='Kota/Kabupaten Kelahiran')),
                ('date_born', models.DateField(null=True, verbose_name='Tanggal Lahir')),
                ('nik', models.PositiveIntegerField(help_text='Diisi berdasarkan Kartu Keluarga', null=True, verbose_name='Nomor Induk Kependudukan (NIK)')),
                ('education', models.CharField(choices=[('SD', 'SD'), ('SLTP', 'SLTP'), ('SLTA', 'SLTA'), ('D2', 'D2'), ('D3', 'D3'), ('D4', 'D4'), ('S1', 'S1'), ('S2', 'S2'), ('S3', 'S3')], max_length=4, verbose_name='Pendidikan Terakhir')),
                ('job', models.CharField(blank=True, max_length=100, null=True, verbose_name='Pekerjaan')),
                ('salary', models.PositiveIntegerField(blank=True, help_text='Diisi dengan angka', null=True, verbose_name='Penghasilan')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(max_length=15, null=True, verbose_name='No. HP')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
